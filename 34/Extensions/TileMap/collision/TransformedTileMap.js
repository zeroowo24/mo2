var gdjs;(function(y){let v;(function(P){const T=class{constructor(t,e,i=null){this._transformation=new y.AffineTransformation;this._inverseTransformation=new y.AffineTransformation;this._transformationUpToDateCount=1;this._source=t,this.tag=e,this._layerIndex=i,this._layers=new Map,this._buildLayersFromTileMap(t,this._layers)}updateFromTileMap(t){this._source=t,this._layers=new Map,this._buildLayersFromTileMap(t,this._layers)}_buildLayersFromTileMap(t,e){if(this._layerIndex){const i=t.getTileLayer(this._layerIndex);if(!i)return;e.set(i.id,new D(this,i))}else for(const i of t.getLayers()){if(!(i instanceof TileMapHelper.EditableTileMapLayer))continue;const n=i;e.set(n.id,new D(this,n))}}getTransformation(){return this._transformation}setTransformation(t){this._transformation=t;const e=this._inverseTransformation;e.copyFrom(t),e.invert(),this._invalidate()}_invalidate(){this._transformationUpToDateCount=(this._transformationUpToDateCount+1)%Number.MAX_SAFE_INTEGER}invalidateTile(t,e,i){const n=this.getLayer(t);if(n){const s=n.get(e,i);s&&s.invalidate()}}getWidth(){return this._source.getWidth()}getHeight(){return this._source.getHeight()}getTileHeight(){return this._source.getTileHeight()}getTileWidth(){return this._source.getTileWidth()}getDimensionX(){return this._source.getDimensionX()}getDimensionY(){return this._source.getDimensionY()}getTileDefinition(t){return this._source.getTileDefinition(t)}getLayer(t){return this._layers.get(t)}getLayers(){return this._layers.values()}pointIsInsideTile(t,e,i){const n=T.workingPoint;return n[0]=t,n[1]=e,this._inverseTransformation.transform(n,n),this._source.pointIsInsideTile(n[0],n[1],i)}getHitboxesAround(t,e,i,n,s){const o=this._inverseTransformation,r=T.workingPoint;r[0]=e,r[1]=i,o.transform(r,r);const h=r[0],a=r[1];r[0]=n,r[1]=i,o.transform(r,r);const p=r[0],f=r[1];r[0]=n,r[1]=s,o.transform(r,r);const g=r[0],l=r[1];r[0]=e,r[1]=s,o.transform(r,r);const x=r[0],u=r[1],B=Math.max(0,Math.floor(Math.min(h,p,g,x)/this._source.getTileWidth())),I=Math.min(this.getDimensionX()-1,Math.floor(Math.max(h,p,g,x)/this._source.getTileWidth())),L=Math.max(0,Math.floor(Math.min(a,f,l,u)/this._source.getTileHeight())),F=Math.min(this.getDimensionY()-1,Math.floor(Math.max(a,f,l,u)/this._source.getTileHeight()));return this.getHitboxes(t,B,L,I,F)}getHitboxes(t,e,i,n,s){return new d(this,t,e,i,n,s)}getAllHitboxes(t){return this.getHitboxes(t,0,0,this._source.getDimensionX()-1,this._source.getDimensionY()-1)}};let H=T;H.workingPoint=[0,0],P.TransformedCollisionTileMap=H;const _=class{constructor(t,e,i,n,s,o){this.map=t,this.tag=e,this.xMin=i,this.yMin=n,this.xMax=s,this.yMax=o}[Symbol.iterator](){let t=this.map.getLayers()[Symbol.iterator](),e=_.emptyItr;return{next:()=>{let i=e.next();for(;i.done;){const n=t.next();if(n.done)return i;e=n.value.getHitboxes(this.tag,this.xMin,this.yMin,this.xMax,this.yMax)[Symbol.iterator](),i=e.next()}return i}}}};let d=_;d.emptyItr={next:()=>({value:void 0,done:!0})};class D{constructor(t,e){this.tileMap=t,this._source=e,this._tiles=[];const i=this._source.getDimensionX(),n=this._source.getDimensionY();this._tiles.length=n;for(let s=0;s<n;s++){this._tiles[s]=[],this._tiles[s].length=i;for(let o=0;o<i;o++)this._tiles[s][o]=new M(this,o,s)}}get(t,e){const i=this._tiles[e];return i?i[t]:void 0}getDimensionX(){return this._tiles.length===0?0:this._tiles[0].length}getDimensionY(){return this._tiles.length}getWidth(){return this._source.getWidth()}getHeight(){return this._source.getHeight()}isFlippedDiagonally(t,e){return this._source.isFlippedDiagonally(t,e)}isFlippedVertically(t,e){return this._source.isFlippedVertically(t,e)}isFlippedHorizontally(t,e){return this._source.isFlippedHorizontally(t,e)}getHitboxes(t,e,i,n,s){return new m(this,t,e,i,n,s)}getAllHitboxes(t){return this.getHitboxes(t,0,0,this.getDimensionX()-1,this.getDimensionY()-1)}}P.TransformedCollisionTileMapLayer=D;const b=class{constructor(t,e,i,n,s,o){this.layer=t,this.tag=e,this.xMin=i,this.yMin=n,this.xMax=s,this.yMax=o}[Symbol.iterator](){let t=this.xMax,e=this.yMin-1,i=b.emptyItr;return{next:()=>{let n=i.next();for(;n.done;){if(t++,t>this.xMax&&(e++,t=this.xMin),e>this.yMax)return n;const s=this.layer.get(t,e);if(!s)continue;const o=s.getDefinition();!o||o.hasTaggedHitBox(this.tag)&&(i=s.getHitboxes()[Symbol.iterator](),n=i.next())}return n}}}};let m=b;m.emptyItr={next:()=>({value:void 0,done:!0})};const c=class{constructor(t,e,i){this.affineTransformationUpToDateCount=0;this.layer=t,this.x=e,this.y=i;const n=this.getDefinition();if(this.hitBoxes=[],n){const s=this.layer.tileMap.tag,o=n.getHitBoxes(s);if(o){this.hitBoxes.length=o.length;for(let r=0;r<this.hitBoxes.length;r++){const h=new y.Polygon;this.hitBoxes[r]=h,h.vertices.length=o[r].length;for(let a=0;a<h.vertices.length;a++)h.vertices[a]=[0,0]}}}}getDefinition(){return this.layer.tileMap.getTileDefinition(this.layer._source.getTileId(this.x,this.y))}_isHitboxesUpToDate(){return this.affineTransformationUpToDateCount===this.layer.tileMap._transformationUpToDateCount}_setHitboxesUpToDate(){this.affineTransformationUpToDateCount=this.layer.tileMap._transformationUpToDateCount}invalidate(){this.affineTransformationUpToDateCount=-1;let t=this.layer.get(this.x-1,this.y);t&&(t.affineTransformationUpToDateCount=-1),t=this.layer.get(this.x+1,this.y),t&&(t.affineTransformationUpToDateCount=-1),t=this.layer.get(this.x,this.y-1),t&&(t.affineTransformationUpToDateCount=-1),t=this.layer.get(this.x,this.y+1),t&&(t.affineTransformationUpToDateCount=-1)}getHitboxes(){if(this._isHitboxesUpToDate())return this.hitBoxes;const t=this.getDefinition();if(!t)return this._setHitboxesUpToDate(),this.hitBoxes.length=0,this.hitBoxes;const e=this.layer.tileMap.tag,i=t.getHitBoxes(e);if(!i)return this._setHitboxesUpToDate(),this.hitBoxes.length=0,this.hitBoxes;const n=this.layer.tileMap,s=n.getTileWidth(),o=n.getTileHeight(),r=i.length===1&&t.hasFullHitBox(e);if(r){const a=this._hasNeighborFullHitBox(-1,0),p=this._hasNeighborFullHitBox(1,0),f=this._hasNeighborFullHitBox(0,-1),g=this._hasNeighborFullHitBox(0,1);let l=0;if(a||p){let x=a?-s:0,u=p?2*s:s;l>=this.hitBoxes.length&&(this.hitBoxes[l]=y.Polygon.createRectangle(0,0)),c.setRectangle(this.hitBoxes[l],x,0,u,o),l++}if(f||g){let x=f?-o:0,u=g?2*o:o;l>=this.hitBoxes.length&&(this.hitBoxes[l]=y.Polygon.createRectangle(0,0)),c.setRectangle(this.hitBoxes[l],0,x,s,u),l++}l===0&&(this.hitBoxes.length===0&&(this.hitBoxes[0]=y.Polygon.createRectangle(0,0)),c.setRectangle(this.hitBoxes[0],0,0,s,o),l++),this.hitBoxes.length=l}else for(let a=0;a<i.length;a++){const p=i[a];a>=this.hitBoxes.length&&(this.hitBoxes[a]=y.Polygon.createRectangle(0,0));const f=this.hitBoxes[a];for(let g=0;g<f.vertices.length;g++){const l=p[g],x=f.vertices[g];x[0]=l[0],x[1]=l[1]}}const h=c.workingTransformation;h.setToTranslation(s*this.x,o*this.y),r||(this.layer.isFlippedHorizontally(this.x,this.y)&&h.flipX(s/2),this.layer.isFlippedVertically(this.x,this.y)&&h.flipY(o/2),this.layer.isFlippedDiagonally(this.x,this.y)&&(h.flipX(s/2),h.rotateAround(Math.PI/2,s/2,o/2))),h.preConcatenate(n.getTransformation());for(let a=0;a<this.hitBoxes.length;a++){const p=this.hitBoxes[a];for(let f=0;f<p.vertices.length;f++){const g=p.vertices[f];h.transform(g,g)}}return this._setHitboxesUpToDate(),this.hitBoxes}_hasNeighborFullHitBox(t,e){const n=this.layer._source.getTileId(this.x+t,this.y+e),s=n&&this.layer.tileMap.getTileDefinition(n);return s&&s.hasFullHitBox(this.layer.tileMap.tag)}static setRectangle(t,e,i,n,s){const o=t.vertices;o[0][0]=e,o[0][1]=i,o[1][0]=n,o[1][1]=i,o[2][0]=n,o[2][1]=s,o[3][0]=e,o[3][1]=s}};let M=c;M.workingTransformation=new y.AffineTransformation})(v=y.TileMap||(y.TileMap={}))})(gdjs||(gdjs={}));
//# sourceMappingURL=TransformedTileMap.js.map
